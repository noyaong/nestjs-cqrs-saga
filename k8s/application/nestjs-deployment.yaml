apiVersion: apps/v1
kind: Deployment
metadata:
  name: nestjs-app
  namespace: nestjs-cqrs-saga
  labels:
    app: nestjs
    component: application
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nestjs
  template:
    metadata:
      labels:
        app: nestjs
        component: application
    spec:
      containers:
      - name: nestjs
        image: nestjs-cqrs-saga:latest
        imagePullPolicy: Never  # minikube에서 로컬 이미지 사용
        ports:
        - containerPort: 3000
          name: http
        env:
        # ConfigMap에서 설정 가져오기
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: DATABASE_NAME
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: REDIS_PORT
        - name: KAFKA_BROKER
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: KAFKA_BROKER
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: PORT
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: JWT_SECRET
        - name: JWT_EXPIRES_IN
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: JWT_EXPIRES_IN
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: nestjs-configmap
              key: LOG_LEVEL
        # Secret에서 데이터베이스 인증 정보 가져오기
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        # Pod 고유 식별자
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: nestjs-service
  namespace: nestjs-cqrs-saga
  labels:
    app: nestjs
    component: application
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    name: http
  selector:
    app: nestjs
---
apiVersion: v1
kind: Service
metadata:
  name: nestjs-loadbalancer
  namespace: nestjs-cqrs-saga
  labels:
    app: nestjs
    component: loadbalancer
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30000
    name: http
  selector:
    app: nestjs 